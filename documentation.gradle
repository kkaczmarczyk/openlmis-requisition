import java.text.SimpleDateFormat

def ramlToCopy = copySpec {
    from 'src/main/resources'
    include 'api-definition.yaml'
    rename { 'api-definition-raml.yaml' }
    expand([
            baseUrl: "$System.env.BASE_URL",
            schema: "\$schema",
            ref: "\$ref"
    ])
}

def ramlHtmlToCopy = copySpec {
    from 'src/main/resources'
    include 'api-definition.html'
}

task copyRaml(type:Copy) {
    with ramlToCopy
    into 'src/main/resources'
}

// Generate live documentation
task ramlToSwagger(type: Exec) {
    description = 'Convert RAML to Swagger'
    commandLine 'npm', 'run', 'runApiSpecConverter'
}
ramlToSwagger.dependsOn(npm_install, copyRaml)

// Generate static (offline) documentation
task ramlToHtml(type: Exec) {
    description = 'Convert RAML to HTML document'
    commandLine 'npm', 'run', 'runApiHtmlConverter'
}
ramlToHtml.dependsOn(npm_install, copyRaml)

task copyRamlToBuild(type:Copy) {
    with ramlToCopy
    into 'build/resources/main'
}

task copyRamlHtmlToBuild(type:Copy) {
    with ramlHtmlToCopy
    into 'build/resources/main'
}
copyRamlHtmlToBuild.dependsOn ramlToHtml

def time = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss")
time.setTimeZone(TimeZone.getTimeZone("GMT"))

def versionToCopy = copySpec {
    from 'src/main/resources'
    include 'version'
}

task generateBuildInfo(type:Copy) {
    with versionToCopy
    into 'build/resources/main'
    expand([
            build: "$System.env.BUILD_NUMBER",
            branch: "$System.env.GIT_BRANCH",
            time: time.format(new Date()) + " GMT"
    ])
}

